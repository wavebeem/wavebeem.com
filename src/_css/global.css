::before,
::after,
* {
  box-sizing: border-box;
}

:root {
  overflow-y: scroll;
  color-scheme: light;
  /* scrollbar-color: var(--color-main-text) var(--color-main-background); */
  /* overscroll-behavior: none; */
  font-synthesis: none;
  background: var(--color-main-background);
  color: var(--color-main-text);
  padding: 0;
  margin: 0;
}

body {
  padding: 0;
  margin: 0;
  /**
   * Setting font size on body rather than html so that 1rem can refer to the
   * user's specified font size anywhere in my CSS, rather than 1.25 times that
   * value; but this way most things get bumped up a little bigger, for a
   * slightly comfier to read site (since this is a blog, after all)
   */
  font-size: var(--font-size-base);
  font-family: var(--font-body);
  line-height: 1.5;
  display: flex;
  flex-direction: column;
  gap: 0;
  min-height: 100vh;
}

main {
  flex: auto;
}

a {
  color: var(--color-main-link);
  border-radius: var(--rounded-small);
  text-decoration-thickness: var(--link-underline-thickness);
  text-underline-offset: var(--link-underline-offset);
  box-decoration-break: clone;
}

@media (hover) {
  a:hover {
    text-decoration-line: underline;
    --link-underline-thickness: var(--link-underline-thickness-hover);
  }
}

:is(input, select, button, textarea) {
  font: inherit;
}

:is(h1, h2, h3, h4, h5, h6) {
  text-wrap: balance;
  color: var(--color-main-text-heading);
}

:is(h1, h2, h3) {
  /* font-weight: normal; */
  line-height: 1.25;
}

h1 {
  font-size: var(--font-size-h1);
  font-family: var(--font-cool);
  letter-spacing: calc(1em / 32);
  word-spacing: calc(1em / 16);
  margin-block: 0 1.5rem;
}

h2 {
  font-size: var(--font-size-h2);
  font-family: var(--font-cool);
  letter-spacing: calc(1em / 32);
  word-spacing: calc(1em / 16);
  margin-block: 4rem -0.5rem;
  border-top: 4px solid;
  border-image-source: linear-gradient(
    to right,
    var(--color-main-decoration),
    transparent 50%
  );
  border-image-slice: 9;
}

h3 {
  font-weight: bold;
  font-family: inherit;
  font-size: var(--font-size-h3);
  margin-block: 4rem 1.5rem;
}

code,
pre {
  font-family: var(--font-mono);
  font-size: var(--font-size-code);
  font-variant-ligatures: none;
  overflow-x: auto;
}

:not(pre) > code {
  font-size: 0.9em;
  /* color: var(--color-syntax-text); */
  /* color: var(--color-main-text-heading); */
  /* color: var(--color-syntax-keyword); */
  font-weight: bold;
}

main details {
  margin: 1rem 0;
  border-bottom: 1px solid var(--color-divider);
}

main details + details {
  margin-top: -1rem;
}

main summary {
  -webkit-user-select: none;
  user-select: none;
  cursor: default;
  padding-block: 0.5rem;
}

@media (hover) {
  main summary:hover {
    border-color: currentColor;
    box-shadow: 0 2px 0 0 currentColor;
  }
}

main summary:active {
  border-color: currentColor;
  box-shadow: 0 3px 0 0 currentColor;
}

main summary:focus-visible {
  box-shadow: none;
  outline-offset: 0px;
  outline-width: 3px;
  border-radius: var(--rounded-small);
}

main details[open] > summary {
  margin-bottom: -1rem;
}

.spoiler {
  padding-inline: 0.25ch;
  background-color: var(--color-main-text);
  color: transparent;
  cursor: default;
}

@media (hover) {
  .spoiler:hover:where(:not(:focus)) {
    opacity: 0.8;
  }
}

.spoiler:focus {
  color: var(--color-main-background);
}

.spoiler:focus-visible {
  outline: 2px solid var(--color-main-text);
  outline-offset: 2px;
}

main :is(blockquote, ul, ol, dl, p) {
  margin-block: 1.5rem;
}

main ul {
  padding-left: 3rem;
  list-style-type: disc;
}

main ol {
  padding-left: 3rem;
}

main :is(ul, ol) :is(ul, ol) {
  margin-block: 0;
}

main {
  flex: auto;
  min-height: 50vh;
}

article header :is(h1, h2, h3) {
  margin-bottom: 0;
}

article header small {
  font-style: normal;
  font-weight: normal;
  font-size: var(--font-size-small);
  vertical-align: middle;
}

:focus-visible {
  outline: 3px solid currentColor;
  outline-offset: 2px;
  text-decoration-line: none;
}

.flex {
  display: flex;
}

.flex-auto {
  flex: auto;
}

.inline-flex {
  display: inline-flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.text-center {
  text-align: center;
}

.grid2 {
  display: grid;
  gap: 0 1.5rem;
}

@media (width >= 50rem) {
  .grid2 {
    grid-template-columns: 1fr 1fr;
  }
}

.gap1 {
  gap: 0.25rem;
}

.gap2 {
  gap: 0.5rem;
}

.gap3 {
  gap: 1rem;
}

.clearfix {
  clear: both;
}

hr {
  border: 0;
  margin-block: 1.5rem;
  margin-inline: auto;
  color: inherit;
  /* border-top: 1px dotted; */
  border-top: 1px solid var(--color-divider);
  width: 100%;
}

article p:has(> video),
article p:has(> img),
article figure {
  margin-block: 1.5rem;
  margin-inline: 0;
}

article :is(p, figure) :is(img, video) {
  max-width: 100%;
  height: auto;
  display: block;
  border-radius: var(--rounded-medium);
}

article .grid2 figure img {
  width: 100%;
}

article figure > :is(img, video) {
  margin-inline: auto;
}

article figure figcaption {
  margin-top: 0.25rem;
  font-size: var(--font-size-small);
  text-align: center;
  text-wrap: balance;
  margin-inline: auto;
}

article p:has(:is(img, video, picture):only-child) {
  /* max-width: initial;
  margin-inline: auto; */
}

article p > :is(img, video, picture):only-child {
  max-width: 100%;
  margin-inline: auto;
}

article
  p:has(:is(video, img, picture):only-child)
  + p:has(> strong:only-child) {
  margin-top: -1rem;
  font-size: var(--font-size-small);
  text-align: center;
  text-wrap: balance;
  margin-inline: auto;
}

article p:has(:is(video, img, picture):only-child) + p > strong:only-child {
  font-weight: normal;
}

article blockquote,
article aside {
  /* margin-inline: 0; */
  padding: 0 3rem;
  font-style: italic;
}

.pixelated {
  image-rendering: crisp-edges;
  image-rendering: pixelated;
}

::marker {
  color: var(--color-main-decoration);
}

ol > li::marker {
  font-weight: bold;
}

dl > dt {
  font-weight: bold;
}

dl > dd {
  margin: 0;
}

dl > :is(dd + dt, dt + dt) {
  margin-top: 1.5rem;
}

@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}

.inline-img {
  display: inline-block;
  vertical-align: middle;
}

.print-only {
  display: none;
}
