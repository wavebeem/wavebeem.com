::before,
::after,
* {
  box-sizing: border-box;
}

:root {
  --color-background: var(--color-root-background);
  --color-text: var(--color-root-text);
  --color-text-small: var(--color-root-text);
  --color-divider: var(--color-root-divider);
  --color-link: var(--color-root-text);

  overflow-y: scroll;
  color-scheme: light dark;
  scrollbar-color: var(--color-main-text) var(--color-main-background);
  color: var(--color-text);
  /* overscroll-behavior: none; */
  font-synthesis: none;

  --root-gradient-size: 100vw;
  --root-gradient-direction: to right;
  --_s1: 16px;
  --_c1: #00000008;
  --_c2: transparent;
  --_b1:
    linear-gradient(45deg, var(--_c2) 25%, var(--_c1) 25%) 0 0 / var(--_s1)
      var(--_s1),
    linear-gradient(135deg, var(--_c2) 25%, var(--_c1) 25%) calc(var(--_s1) / 2)
      0 / var(--_s1) var(--_s1),
    linear-gradient(45deg, var(--_c1) 75%, var(--_c2) 75%) calc(var(--_s1) / 2)
      calc(var(--_s1) / -2) / var(--_s1) var(--_s1),
    linear-gradient(135deg, var(--_c1) 75%, var(--_c2) 75%) 0px
      calc(var(--_s1) / 2) / var(--_s1) var(--_s1);
  --_b2: repeating-linear-gradient(
    var(--root-gradient-direction),
    var(--color-root-gradient1) calc(0 * var(--root-gradient-size)),
    var(--color-root-gradient2) calc(1 * var(--root-gradient-size)),
    var(--color-root-gradient1) calc(3 * var(--root-gradient-size))
  );
  background:
    var(--_b1),
    var(--_b2) var(--color-root-overscroll);
  background: var(--color-main-background);
}

body {
  /**
   * Setting font size on body rather than html so that 1rem can refer to the
   * user's specified font size anywhere in my CSS, rather than 1.25 times that
   * value; but this way most things get bumped up a little bigger, for a
   * slightly comfier to read site (since this is a blog, after all)
   */
  font-size: var(--font-size-base);
  font-family: var(--font-body);
  line-height: 1.5;
  margin: 0 auto;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  gap: 0;
}

a {
  color: var(--color-link);
  border-radius: var(--rounded-small);
  text-decoration-thickness: var(--link-underline-thickness);
  text-underline-offset: var(--link-underline-offset);
  box-decoration-break: clone;
}

:is(h1, h2) a {
  color: inherit;
}

@media (hover) {
  a:hover {
    text-decoration-line: underline;
    --link-underline-thickness: var(--link-underline-thickness-hover);
  }
}

:is(input, select, button, textarea) {
  font: inherit;
}

:is(h1, h2, h3, h4, h5, h6) {
  text-wrap: balance;
  /* background-color: var(--color-main-text-heading); */
  /* text-decoration: underline;
  text-decoration-thickness: calc(1em / 8);
  text-underline-offset: calc(1em / 16);
  text-decoration-color: var(--color-main-text-heading); */
  /* color: var(--color-main-text-heading); */
}

:is(h1) {
  /* padding-top: 1rem; */
  /* border-top: 4px solid var(--color-main-text-heading); */
  /* background-color: var(--color-main-text-heading); */
  /* border-bottom: 4px solid; */
  /* border-image: linear-gradient(var(--color-main-text-heading) 0 100%);
  border-image: linear-gradient(
    to left,
    var(--color-main-text-heading),
    transparent
  ); */

  /* border-image-slice: 9 fill; */
  /* border-image-outset: 0 0 0 100vw; */
  /* padding-block: 1rem; */

  /* box-shadow: inset 0 -8px 0 var(--color-main-text-heading);
  text-shadow: 0 2px 0 var(--color-main-background);
  margin-inline: -1rem;
  padding-inline: 1rem; */

  /* border-image: linear-gradient(
    to top,
    var(--color-main-text-heading) 0 8px,
    transparent 8px 100%
  );
  text-shadow: 0 2px 0 var(--color-main-background);
  border-image-width: 10px;
  border-image-slice: 9 fill;
  border-image-outset: 0 0 0 100vw; */
  /* font-weight: 900; */
}

:is(h2) {
  /* text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: calc(1em / 8);
  text-decoration-color: var(--color-main-text-heading);
  text-underline-position: below;
  text-underline-offset: calc(1em / 8); */
  /* font-weight: 900; */

  border-bottom: 4px solid;
  /* border-image: linear-gradient(var(--color-main-text-heading) 0 100%); */
  border-image: linear-gradient(
    to right,
    var(--color-main-text-heading),
    transparent
  );
  border-image-slice: 9;
  /* border-image-outset: 0 0 0 100vw; */
  padding-bottom: 0.25rem;
}

:is(h1, h2) {
  /* padding-left: 1rem;
  margin-left: -1rem; */
}

:is(h1, h2, h3) {
  /* font-weight: normal; */
  line-height: 1.25;
}

h1 {
  font-size: var(--font-size-h1);
  font-family: var(--font-cool);
  font-weight: normal;
  font-style: italic;
  /* letter-spacing: -1px; */
  margin-block: 0 1.5rem;
}

h2 {
  font-size: var(--font-size-h2);
  font-family: var(--font-cool);
  /* letter-spacing: -1px; */
  margin-block: 4rem 1.5rem;
  /* padding-bottom: 1rem;
  border-bottom: 1px solid var(--color-divider); */
}

h3 {
  font-weight: bold;
  font-family: inherit;
  font-size: var(--font-size-h3);
  margin-block: 4rem 1.5rem;
}

code,
pre {
  font-family: var(--font-mono);
  font-size: var(--font-size-code);
  font-variant-ligatures: none;
  overflow-x: auto;
}

:not(pre) > code {
  box-decoration-break: clone;
  /* background: var(--color-syntax-background); */
  color: var(--color-syntax-text);
  /* padding: 2px 0.5ch;
  border-radius: var(--rounded-medium); */
}

.stuff {
  max-width: var(--content-width);
}

main details {
  margin: 1rem 0;
  border-bottom: 2px solid var(--color-divider);
}

main details + details {
  margin-top: -1rem;
}

main summary {
  -webkit-user-select: none;
  user-select: none;
  cursor: default;
  padding-block: 0.5rem;
}

@media (hover) {
  main summary:hover {
    border-color: currentColor;
    box-shadow: 0 2px 0 0 currentColor;
  }
}

main summary:active {
  border-color: currentColor;
  box-shadow: 0 3px 0 0 currentColor;
}

main summary:focus-visible {
  box-shadow: none;
  outline-offset: 0px;
  outline-width: 3px;
  border-radius: var(--rounded-small);
}

main details[open] > summary {
  margin-bottom: -1rem;
}

.spoiler {
  padding-inline: 0.25ch;
  background-color: var(--color-text);
  color: transparent;
  cursor: default;
}

@media (hover) {
  .spoiler:hover:where(:not(:focus)) {
    opacity: 0.8;
  }
}

.spoiler:focus {
  color: var(--color-background);
}

.spoiler:focus-visible {
  outline: 2px solid var(--color-text);
  outline-offset: 2px;
}

main :is(blockquote, ul, ol, dl, p) {
  margin-block: 1.5rem;
}

main ul {
  padding-left: 3rem;
  list-style-type: disc;
}

main ol {
  padding-left: 3rem;
}

main :is(ul, ol) :is(ul, ol) {
  margin-block: 0;
}

main {
  --color-background: var(--color-main-background);
  --color-text: var(--color-main-text);
  --color-text-small: var(--color-main-text-small);
  --color-divider: var(--color-main-divider);
  --color-link: var(--color-main-link);

  flex: auto;
  padding-block: 1.5rem;
  padding-inline: 1rem;
  max-width: 50rem;
  margin-inline: auto;

  background-color: var(--color-background);
  color: var(--color-text);

  /* Expand main to height of sidebar if smaller */
  align-self: stretch;
}

article header :is(h1, h2, h3) {
  margin-bottom: 0;
}

article header > small {
  color: var(--color-text-small);
}

article header small {
  font-style: normal;
  font-weight: normal;
  font-size: var(--font-size-small);
  vertical-align: middle;
  color: var(--color-text-small);
}

:focus-visible {
  outline: 3px solid currentColor;
  outline-offset: 2px;
  text-decoration-line: none;
}

.flex {
  display: flex;
}

.flex-auto {
  flex: auto;
}

.inline-flex {
  display: inline-flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.text-center {
  text-align: center;
}

.grid2 {
  display: grid;
  gap: 0 1.5rem;
}

@media (width >= 50rem) {
  .grid2 {
    grid-template-columns: 1fr 1fr;
  }
}

.gap1 {
  gap: 0.25rem;
}

.gap2 {
  gap: 0.5rem;
}

.gap3 {
  gap: 1rem;
}

/* --- TOYBOX --- */

.crime-frame {
  border-radius: var(--rounded-medium);
  overflow: hidden;
  position: relative;
}

.crime-frame :is(details, summary) {
  margin: unset;
}

.crime-frame > details {
  background: white;
}

.clearfix {
  clear: both;
}

hr {
  border: 0;
  margin-block: 1.5rem;
  margin-inline: auto;
  color: inherit;
  /* border-top: 1px dotted; */
  border-top: 2px solid var(--color-divider);
  width: 100%;
}

article p:has(> video),
article p:has(> img),
article figure {
  margin-block: 1.5rem;
  margin-inline: 0;
}

article :is(p, figure) :is(img, video) {
  max-width: 100%;
  height: auto;
  display: block;
  border-radius: var(--rounded-medium);
}

article .grid2 figure img {
  width: 100%;
}

article figure figcaption {
  margin-top: 1rem;
  font-size: var(--font-size-small);
  font-weight: bold;
  text-wrap: balance;
}

article figure figcaption small {
  font-weight: normal;
  font-size: var(--font-size-small);
  color: var(--color-text-small);
  text-wrap: balance;
}

article p:has(:is(img, video, picture):only-child) {
  max-width: initial;
}

article
  p:has(:is(video, img, picture):only-child)
  + p:has(> strong:only-child) {
  margin-top: -1rem;
  font-size: var(--font-size-small);
  text-wrap: balance;
}

article p:has(:is(video, img, picture):only-child) + p > strong:only-child {
  font-weight: normal;
  color: var(--color-main-text-small);
}

article blockquote,
article aside {
  margin-inline: 0;
  padding: 0 1.5rem;
  border-left: 4px solid;
}

.pixelated {
  image-rendering: crisp-edges;
  image-rendering: pixelated;
}

ol > li::marker {
  font-weight: bold;
}

dl > dt {
  font-weight: bold;
}

dl > dd {
  margin: 0;
}

dl > :is(dd + dt, dt + dt) {
  margin-top: 1.5rem;
}

@media (width >= 50rem) {
  body {
    display: grid;
    /* Prevent grid blowout by using minmax(0, 1fr) instead of 1fr */
    grid-template-columns: minmax(0, 1fr) max-content;
    /* Make the nav look hierarchically below the header and footer */
    grid-template-areas:
      "header   header"
      "header2  header2"
      "main     nav"
      "footer   footer";
    gap: 0;
    /* padding: 1rem;
    padding-left: 0; */
    /* Align the sidebar to the top, don't stretch to match the main height */
    align-items: flex-start;
    border-radius: var(--rounded-large);
    /* max-width: 50rem; */
  }

  main {
    padding-inline: 1.5rem;
    grid-area: main;
    border-radius: var(--rounded-large);
  }

  :root {
    /* padding: 1.5rem; */
    scrollbar-color: var(--color-text) var(--color-root-background-alpha);
    --root-gradient-size: 100vh;
    --root-gradient-direction: to bottom;
  }
}

@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}

.inline-img {
  display: inline-block;
  vertical-align: middle;
}

.print-only {
  display: none;
}
